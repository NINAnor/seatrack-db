Hi Halfdan, 

I'm constructing a database structure based on your suggested model. The model overall seems reasonable and has obviously taken some time to put together, so thanks for the thorough work! At the moment I have some (hopefully) simple questions to help me understand.

The current setup with the logging_session involves some logic that has to be built into the database. I need to understand the flow a bit better to set it up in the right way. I assume the field personnel does not know which logging_session the loggers they work with are linked to? So the metadata files just have info of logger_id and deployment/retrieval etc.? If so, we need to link the loggers to the correct logging_session, by some appropriate logic. I don't think this is reflected in the suggested database model so far. I can give it a try. 

1. Is it correct that the metadata files does not contain information of the logging_session? 

2. What are the relationship between colonies and locations? Is it so that colonies has a one-to-many relationship to localities? In other words, that each colony might have one or more locations, but that each location corresponds to only one colony? 

3. Could you walk me through the typical steps of inputing new data? To build some "user friendly interface", I need to know the typical modes of inserting data in the database. Some data is also automatically generated when new data is inserted, and I need to understand the data flow to write these routines (triggers). Outputting data is much easier, and we can discuss that later. 

Is data inserted only at 1) startup (we here set startup and allocation and some of the logging_session table) and 2) after some events (we insert data from a metadatafile with all the info in deployment, retrieval, individual status, individual info, from which we derive the rest of the logging_session info)? We need to go through the input methods in detail later, but I'm just trying to understand the basic steps. Is the shutdown data for example available at the same time as we insert the retrieval info (i.e. in the metadata files)? Or is there a 3) third input of the shutdown data (with info of file_archive data as well?). In addition there will be a 4) fourth road of inserting data: the "metadata" of the database, for example allowed colony names etc.

4. Just as an information, I need to create "lookup-tables" for each "column" that contains information that can only take some values. So for example, the column "logger_fate" in the "deployment" table will be linked to another table with a list of all the allowed values of "logger_fate". There will be quite a number of these tables, and Vegard has provided me with a list of allowed values for most of the tables. We will have to systemize this together.

5. Also to inform, we have discussed this toghether here, and it seems the most reasonable not to include the file archive in the actual database. There are a lot of files, depending on the different logger models, and some of the data is binary (?). So our idea was to include the table "file_archive" but not the logger processing files beyond that. Then we could still link all the data in the database to a specific file_id, and but store these files (and derivatives) in a separate file archive. Does that seem reasonable?




